@charset "UTF-8";

//
// == text
// -----------------------------------------------------------------
// 隱藏文字
@mixin text-hide($ext:true) {
    @include mixin-dryer(texthide, $ext) {
        font: 0/0 a;
        color: transparent;
        text-shadow: none;
        background-color: transparent;
        border: 0;
    }
}
@mixin sr-only($ext:true) {
    @include mixin-dryer(sronly, $ext) {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        border: 0;
    }
}
@mixin sr-only-focusable($ext:true) {
    @include mixin-dryer(sronly, $ext) {
        &:active,
        &:focus {
            position: static;
            width: auto;
            height: auto;
            overflow: visible;
            clip: auto;
            white-space: normal;
        }
    }
}

// 字換圖
@mixin text-pic($img, $width:false, $height:false, $seat: 0 0) {
    @include text-hide;

    background: url(#{$img-path}/#{$img}) $seat no-repeat;

    @if $width  { width: $width; }
    @if $height { height: $height; }
}

// 文字溢位出現省略號,要設寬度
@mixin text-overflow($width:100%, $ext:true) {
    @include mixin-dryer('text-overflow', $ext) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    @if $width { width: $width; }
}

// 文字邊框 ex. @include stroke(2,#fff);
@function stroke($stroke, $color) {
    $shadow: ();
    $from: $stroke*-1;
    @for $i from $from through $stroke {
        @for $j from $from through $stroke {
            $shadow: append($shadow, $i*1px $j*1px 0 $color, comma);
        }
    }
    @return $shadow;
}
@mixin stroke($stroke, $color) {
    text-shadow: stroke($stroke, $color);
}

//
// == font
// -----------------------------------------------------------------
// ref https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6

// =============================================================================
// String Replace in function
// =============================================================================


// =============================================================================
// Font Face
// =============================================================================
// 使用方法：
// @include font-face(Samplino, fonts/Samplino);
// @include font-face("Samplina Neue", fonts/SamplinaNeue, bold, italic);
// @include font-face(Samplinoff, fonts/Samplinoff, null, null, woff);
// @include font-face(Samplinal, fonts/Samplinal, 500, normal, eot woff2 woff);

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_")
    );

    $formats: (
        otf: "opentype",
        ttf: "truetype"
    );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}