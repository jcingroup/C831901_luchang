@charset "UTF-8";


@import "core/function";
@import "core/variables";
@import "core/mixins";


// output
// ------------------------------------------------------------
// 模擬 table
.cells    { display: table; width:100%; }
.cell     { display: table-cell; }

.row {
    // for float
    @include clearfix;

    margin-bottom: em($field-spacer);
}

// for flex
.flexs {
    @include flexs;

    @each $breakpoint, $value in $breakpoints {
        @include mq($value) {
            &-#{$breakpoint} { @include flexs; }
        }
    }
}
.flex {
    flex: 1;
    max-width: 100%;
}

//
// == float
[class*='col-'] {
    display: block;
    position: relative;   // For pull, push
    min-height: 1px;      // Prevent columns from collapsing when empty
}

//
// 預設無內距，如果要有內距時
.row, .flexs {
    &.padding {
        // if 最外層沒有設 overflow: hidden; than 會出現橫向卷軸
        margin-left: ($gutter / -2);
        margin-right: ($gutter / -2);
    }
}
.padding {
    [class*='col-'], [class*='flex-'], .flex {
        padding-left: if(unitless($gutter), $gutter/2 *1%, $gutter/2);
        padding-right: if(unitless($gutter), $gutter/2 *1%, $gutter/2);
    }
}

//
// 產出 col-1 ~ 12, flex-1 ~ 12
@include make-grid-columns($grid-columns, $gutter, $breakpoints);
